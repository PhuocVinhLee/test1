{
  "version": 3,
  "sources": ["../../vue3-countdown/dist/vue3-countdown.esm.js"],
  "sourcesContent": ["/**\n * vue3-countdown v1.0.5\n * (c) 2021 wuanrin\n * Released under the MIT license.\n */\nimport { defineComponent, ref, computed, h } from 'vue';\n\n/**\r\n * Utils\r\n */\r\nconst units = [\r\n    { symbol: 'D', value: 24 * 60 * 60 * 1000 },\r\n    { symbol: 'H', value: 60 * 60 * 1000 },\r\n    { symbol: 'm', value: 60 * 1000 },\r\n    { symbol: 's', value: 1000 },\r\n    { symbol: 'S', value: 100 }\r\n];\r\nfunction replaceAll(source, search, replace) {\r\n    const escapeStr = '~' + search;\r\n    if (source.indexOf(escapeStr) > -1) {\r\n        return source\r\n            .split(escapeStr)\r\n            .map(part => replaceAll(part, search, replace))\r\n            .join(escapeStr);\r\n    }\r\n    return source.replace(new RegExp(search, 'g'), String(replace));\r\n}\r\n// Decompose time into time units\r\nfunction resolveCountdown(countdown, format = 'HH:mm:ss') {\r\n    const res = {};\r\n    if (format.indexOf('~') > -1) {\r\n        format = format.replace(/~[DHmsS]/g, '');\r\n    }\r\n    const thisUnits = units.filter(unit => format.indexOf(unit.symbol) > -1);\r\n    for (let i = 0, l = thisUnits.length; i < l; i++) {\r\n        const { symbol, value } = thisUnits[i];\r\n        // Use ceil method when only unit\r\n        const unitValue = (l === 1\r\n            ? Math.ceil(countdown / value)\r\n            : Math.floor(countdown / value));\r\n        res[symbol] = unitValue;\r\n        res[symbol + symbol] = unitValue < 10 ? `0${unitValue}` : unitValue;\r\n        countdown %= value;\r\n    }\r\n    return res;\r\n}\r\n// Format countdown\r\nfunction formatCountdown(countdown, format = 'HH:mm:ss') {\r\n    // Check whether resolved\r\n    const time = (typeof countdown === 'number'\r\n        ? resolveCountdown(countdown, format)\r\n        : countdown);\r\n    // Sort the keys from long to short to replace long placeholders first\r\n    // to prevent long placeholders from being replaced by short ones\r\n    const keys = Object.keys(time).sort((a, b) => b.length - a.length);\r\n    let rs = format;\r\n    keys.forEach(key => {\r\n        rs = replaceAll(rs, key, time[key]);\r\n    });\r\n    // Remove escape char\r\n    if (rs.indexOf('~') > -1) {\r\n        rs = rs.replace(/~([DHmsS])/g, '$1');\r\n    }\r\n    return rs;\r\n}\n\nvar Countdown = defineComponent({\r\n    name: 'Countdown',\r\n    emits: ['change', 'finish'],\r\n    props: {\r\n        // Countdown time. ms\r\n        time: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        format: {\r\n            type: String,\r\n            default: 'HH:mm:ss'\r\n        },\r\n        autoStart: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    setup(props, { emit }) {\r\n        const currentTime = ref(props.time);\r\n        const resolved = ref(resolveCountdown(currentTime.value, props.format));\r\n        const inCountdown = ref(false);\r\n        const config = {\r\n            restTime: props.time,\r\n            now: 0,\r\n            timer: 0\r\n        };\r\n        // computed\r\n        const stepInterval = computed(() => /s/i.test(props.format) ? 30 : 1000);\r\n        const formatted = computed(() => formatCountdown(resolved.value, props.format));\r\n        // methods\r\n        const start = () => {\r\n            if (!inCountdown.value) {\r\n                config.now = Date.now();\r\n                config.restTime = currentTime.value;\r\n                window.clearInterval(config.timer);\r\n                config.timer = window.setInterval(step, stepInterval.value);\r\n                inCountdown.value = true;\r\n            }\r\n        };\r\n        const step = () => {\r\n            const { restTime, now } = config;\r\n            const interval = Date.now() - now;\r\n            const target = restTime > interval ? restTime - interval : 0;\r\n            const thisResolved = resolveCountdown(target, props.format);\r\n            const thisFormatted = formatCountdown(thisResolved, props.format);\r\n            if (thisFormatted !== formatted.value) {\r\n                emit('change', {\r\n                    currentTime: target,\r\n                    resolved: thisResolved,\r\n                    formatted: thisFormatted\r\n                });\r\n                resolved.value = thisResolved;\r\n            }\r\n            currentTime.value = target;\r\n            if (restTime <= interval) {\r\n                stop();\r\n            }\r\n        };\r\n        const stop = () => {\r\n            doStop();\r\n            emit('finish');\r\n        };\r\n        const doStop = () => {\r\n            inCountdown.value = false;\r\n            window.clearInterval(config.timer);\r\n        };\r\n        const reset = () => {\r\n            currentTime.value = config.restTime = props.time;\r\n            resolved.value = resolveCountdown(props.time, props.format);\r\n            doStop();\r\n        };\r\n        if (props.autoStart) {\r\n            start();\r\n        }\r\n        return {\r\n            currentTime,\r\n            resolved,\r\n            formatted,\r\n            inCountdown,\r\n            start,\r\n            stop,\r\n            reset\r\n        };\r\n    },\r\n    render() {\r\n        const { currentTime, resolved, formatted } = this;\r\n        return h('div', null, (this.$slots.default &&\r\n            this.$slots.default({\r\n                currentTime,\r\n                resolved,\r\n                formatted\r\n            })) || this.formatted);\r\n    }\r\n});\n\nexport { Countdown as default };\n"],
  "mappings": "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",
  "names": []
}
